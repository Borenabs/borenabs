<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.borenabs.mapper.ArticleMapper" >
  <resultMap id="BaseResultMap" type="com.borenabs.entity.Article" >
    <id column="article_id" property="articleId" jdbcType="INTEGER" />
    <result column="article_user_id" property="articleUserId" jdbcType="INTEGER" />
    <result column="article_title" property="articleTitle" jdbcType="VARCHAR" />
    <result column="article_view_count" property="articleViewCount" jdbcType="INTEGER" />
    <result column="article_comment_count" property="articleCommentCount" jdbcType="INTEGER" />
    <result column="article_like_count" property="articleLikeCount" jdbcType="INTEGER" />
    <result column="article_is_comment" property="articleIsComment" jdbcType="INTEGER" />
    <result column="article_status" property="articleStatus" jdbcType="INTEGER" />
    <result column="article_order" property="articleOrder" jdbcType="INTEGER" />
    <result column="article_update_time" property="articleUpdateTime" jdbcType="TIMESTAMP" />
    <result column="article_create_time" property="articleCreateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.borenabs.entity.ArticleWithBLOBs" extends="BaseResultMap" >
    <result column="article_content" property="articleContent" jdbcType="LONGVARCHAR" />
    <result column="article_summary" property="articleSummary" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    article_id, article_user_id, article_title, article_view_count, article_comment_count,
    article_like_count, article_is_comment, article_status, article_order, article_update_time, 
    article_create_time
  </sql>
  <sql id="tb">article</sql>
  <sql id="Blob_Column_List" >
    article_content, article_summary
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from article
    where article_id = #{articleId,jdbcType=INTEGER} and article_status=1
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from article
    where article_id = #{articleId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.borenabs.entity.ArticleWithBLOBs" useGeneratedKeys="true" keyProperty="articleId">
    insert into article (article_id,article_user_id, article_title,
      article_view_count, article_comment_count, 
      article_like_count, article_is_comment, article_status, 
      article_order, article_update_time, article_create_time, 
      article_content, article_summary)
    values (#{articleId,jdbcType=INTEGER},#{articleUserId,jdbcType=INTEGER}, #{articleTitle,jdbcType=VARCHAR},
      #{articleViewCount,jdbcType=INTEGER}, #{articleCommentCount,jdbcType=INTEGER}, 
      #{articleLikeCount,jdbcType=INTEGER}, #{articleIsComment,jdbcType=INTEGER}, #{articleStatus,jdbcType=INTEGER}, 
      #{articleOrder,jdbcType=INTEGER}, #{articleUpdateTime,jdbcType=TIMESTAMP}, #{articleCreateTime,jdbcType=TIMESTAMP}, 
      #{articleContent,jdbcType=LONGVARCHAR}, #{articleSummary,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.borenabs.entity.ArticleWithBLOBs" >
    insert into article
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="articleId != null" >
        article_id,
      </if>
      <if test="articleUserId != null" >
        article_user_id,
      </if>
      <if test="articleTitle != null" >
        article_title,
      </if>
      <if test="articleViewCount != null" >
        article_view_count,
      </if>
      <if test="articleCommentCount != null" >
        article_comment_count,
      </if>
      <if test="articleLikeCount != null" >
        article_like_count,
      </if>
      <if test="articleIsComment != null" >
        article_is_comment,
      </if>
      <if test="articleStatus != null" >
        article_status,
      </if>
      <if test="articleOrder != null" >
        article_order,
      </if>
      <if test="articleUpdateTime != null" >
        article_update_time,
      </if>
      <if test="articleCreateTime != null" >
        article_create_time,
      </if>
      <if test="articleContent != null" >
        article_content,
      </if>
      <if test="articleSummary != null" >
        article_summary,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="articleId != null" >
        #{articleId,jdbcType=INTEGER},
      </if>
      <if test="articleUserId != null" >
        #{articleUserId,jdbcType=INTEGER},
      </if>
      <if test="articleTitle != null" >
        #{articleTitle,jdbcType=VARCHAR},
      </if>
      <if test="articleViewCount != null" >
        #{articleViewCount,jdbcType=INTEGER},
      </if>
      <if test="articleCommentCount != null" >
        #{articleCommentCount,jdbcType=INTEGER},
      </if>
      <if test="articleLikeCount != null" >
        #{articleLikeCount,jdbcType=INTEGER},
      </if>
      <if test="articleIsComment != null" >
        #{articleIsComment,jdbcType=INTEGER},
      </if>
      <if test="articleStatus != null" >
        #{articleStatus,jdbcType=INTEGER},
      </if>
      <if test="articleOrder != null" >
        #{articleOrder,jdbcType=INTEGER},
      </if>
      <if test="articleUpdateTime != null" >
        #{articleUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="articleCreateTime != null" >
        #{articleCreateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="articleContent != null" >
        #{articleContent,jdbcType=LONGVARCHAR},
      </if>
      <if test="articleSummary != null" >
        #{articleSummary,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.borenabs.entity.ArticleWithBLOBs" >
    update article
    <set >
      <if test="articleUserId != null" >
        article_user_id = #{articleUserId,jdbcType=INTEGER},
      </if>
      <if test="articleTitle != null" >
        article_title = #{articleTitle,jdbcType=VARCHAR},
      </if>
      <if test="articleViewCount != null" >
        article_view_count = #{articleViewCount,jdbcType=INTEGER},
      </if>
      <if test="articleCommentCount != null" >
        article_comment_count = #{articleCommentCount,jdbcType=INTEGER},
      </if>
      <if test="articleLikeCount != null" >
        article_like_count = #{articleLikeCount,jdbcType=INTEGER},
      </if>
      <if test="articleIsComment != null" >
        article_is_comment = #{articleIsComment,jdbcType=INTEGER},
      </if>
      <if test="articleStatus != null" >
        article_status = #{articleStatus,jdbcType=INTEGER},
      </if>
      <if test="articleOrder != null" >
        article_order = #{articleOrder,jdbcType=INTEGER},
      </if>
      <if test="articleUpdateTime != null" >
        article_update_time = #{articleUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="articleCreateTime != null" >
        article_create_time = #{articleCreateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="articleContent != null" >
        article_content = #{articleContent,jdbcType=LONGVARCHAR},
      </if>
      <if test="articleSummary != null" >
        article_summary = #{articleSummary,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where article_id = #{articleId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.borenabs.entity.ArticleWithBLOBs" >
    update article
    set article_user_id = #{articleUserId,jdbcType=INTEGER},
      article_title = #{articleTitle,jdbcType=VARCHAR},
      article_view_count = #{articleViewCount,jdbcType=INTEGER},
      article_comment_count = #{articleCommentCount,jdbcType=INTEGER},
      article_like_count = #{articleLikeCount,jdbcType=INTEGER},
      article_is_comment = #{articleIsComment,jdbcType=INTEGER},
      article_status = #{articleStatus,jdbcType=INTEGER},
      article_order = #{articleOrder,jdbcType=INTEGER},
      article_update_time = #{articleUpdateTime,jdbcType=TIMESTAMP},
      article_content = #{articleContent,jdbcType=LONGVARCHAR},
      article_summary = #{articleSummary,jdbcType=LONGVARCHAR}
    where article_id = #{articleId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.borenabs.entity.Article" >
    update article
    set article_user_id = #{articleUserId,jdbcType=INTEGER},
      article_title = #{articleTitle,jdbcType=VARCHAR},
      article_view_count = #{articleViewCount,jdbcType=INTEGER},
      article_comment_count = #{articleCommentCount,jdbcType=INTEGER},
      article_like_count = #{articleLikeCount,jdbcType=INTEGER},
      article_is_comment = #{articleIsComment,jdbcType=INTEGER},
      article_status = #{articleStatus,jdbcType=INTEGER},
      article_order = #{articleOrder,jdbcType=INTEGER},
      article_update_time = #{articleUpdateTime,jdbcType=TIMESTAMP},
      article_create_time = #{articleCreateTime,jdbcType=TIMESTAMP}
    where article_id = #{articleId,jdbcType=INTEGER}
  </update>
  <!--前台文章列表-->
  <select id="homeArticleList" resultMap="ResultMapWithBLOBs">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from article
    where article_status = 1
    ORDER BY article_create_time DESC, article_id DESC
  </select>
  <select id="countArticle" resultType="java.lang.Integer">
    SELECT COUNT(*) FROM
    <include refid="tb"/>
    WHERE article_status = 1
  </select>
  <select id="countArticleComment" resultType="java.lang.Integer">
    SELECT SUM(article_comment_count)
    FROM
    <include refid="tb"/>
    WHERE article_status = 1
  </select>
  <select id="countArticleView" resultType="java.lang.Integer">
    SELECT SUM(article_view_count) FROM
    <include refid="tb"/>
    WHERE article_status = 1
  </select>
  <select id="getAfterArticle" resultMap="ResultMapWithBLOBs">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from article
    <where>
        article_id &lt; #{id} AND article_status = 1
    </where>
    ORDER BY article_id DESC
    limit 1
  </select>
  <select id="getPreArticle" resultMap="ResultMapWithBLOBs">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from article
    <where>
      article_id > #{id} AND article_status = 1
    </where>
    ORDER BY article_id DESC
    limit 1
  </select>
  <select id="listArticleByCommentCount" resultMap="ResultMapWithBLOBs">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from article
    WHERE article_status = 1
    ORDER BY
    article_comment_count DESC,article_order DESC, article_id DESC
    limit #{limit}
  </select>
  <select id="listRandomArticle" resultMap="ResultMapWithBLOBs">
    SELECT
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from article
    WHERE article_status = 1
    ORDER BY
    RAND()
    limit #{limit}
  </select>
  <update id="updateCommentCount" parameterType="java.lang.Integer">
    update article
    set article_comment_count=
          (
            SELECT count(*) FROM `comment`
            WHERE article.article_id=comment.comment_article_id
          )
    WHERE article_id=#{articleId}
  </update>
  <select id="categoryArticleList" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer">
    select DISTINCT
      article.article_id,
      article.article_user_id,
      article.article_title,
      article.article_content,
      article.article_view_count,
      article.article_comment_count,
      article.article_like_count,
      article.article_is_comment,
      article.article_status,
      article.article_order,
      article.article_update_time,
      article.article_create_time,
      article.article_summary
    from article
    INNER JOIN article_category_ref ON article_category_ref.article_id = article.article_id
    INNER JOIN category ON category.category_id = article_category_ref.category_id
    WHERE category.category_id = #{articleId} and article.article_status =1
    ORDER BY article_create_time DESC, article_id DESC
  </select>
  <select id="articleListByTag" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    SELECT DISTINCT
      article.article_id,
      article.article_user_id,
      article.article_title,
      article.article_content,
      article.article_view_count,
      article.article_comment_count,
      article.article_like_count,
      article.article_is_comment,
      article.article_status,
      article.article_order,
      article.article_update_time,
      article.article_create_time,
      article.article_summary
    FROM
      article
        INNER JOIN article_tag_ref ON article_tag_ref.article_id = article.article_id
        INNER JOIN tag ON tag.tag_id = article_tag_ref.tag_id AND article.article_status = 1 AND tag.tag_id = #{tagId}
    ORDER BY article_create_time DESC, article_id DESC
  </select>
  <select id="getArticleById" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from article
    where article_id = #{articleId,jdbcType=INTEGER}
  </select>
  <select id="articleList" resultMap="ResultMapWithBLOBs" >
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from article
    ORDER BY article_create_time DESC, article_id DESC
  </select>
</mapper>